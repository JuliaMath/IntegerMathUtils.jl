name: CI

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

on:
  create:
    tags:
  push:
    branches:
      - main
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
      - '.github/workflows/TagBot.yml'
  pull_request:
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
      - '.github/workflows/TagBot.yml'
jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5

  test:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - name: (debug) find all lcov.info files
        run: find . -type f -name 'lcov.info'
        if: runner.os != 'Windows'
      # - name: (debug) cat all lcov.info files
      #   run: find . -type f -name 'lcov.info' -exec cat {} \;
      #   if: runner.os != 'Windows'
      - uses: codecov/codecov-action@v4
        with:
          file: lcov.info
          # For `v4` of `codecov/codecov-action`,
          # if the repo is public, the following rules apply:
          # 1. If the PR is from a fork, then no Codecov token is required.
          # 2. If the PR is NOT from a fork, then the Codecov token is required.
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
